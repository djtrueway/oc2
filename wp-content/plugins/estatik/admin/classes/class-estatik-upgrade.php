<?php

class Estatik_Upgrader
{
    /**
     * @var Es_Messenger_Interface
     */
    protected $_messenger;
    /**
     * @var array $_FILES keyed array.
     */
    protected $_file;

    /**
     * Estatik_Upgrader constructor.
     *
     * @param array $file
     * @param Es_Messenger_Interface $messenger
     * @throws Exception
     */
    public function __construct( array $file, Es_Messenger_Interface $messenger )
    {
        if ( is_null( $messenger ) ) {
            throw new Exception( __( 'Messenger can\'t to be empty.', 'es-plugin' ) );
        }

        if ( empty( $file['name'] ) ) {
            throw new Exception( __( 'File can\'t to be empty.', 'es-plugin') );
        }

        $this->_file = $file;
        $this->_messenger = $messenger;
    }

    /**
     * Run upgrader.
     *
     * @return bool
     */
    public function run()
    {
        if ( ! class_exists( 'ZipArchive' ) ) {
            $this->_messenger->set_message(
                __( 'Please, install zip extension for PHP. http://php.net/manual/ru/book.zip.php', 'es-plugin' ),
                'error' );

            return false;
        }

        $upload = $this->upload_file( $this->_file );

        if ( $upload ) {
            $z = new ZipArchive();
            $z->open( $upload['file'] );

            $valid = $z->getFromName( 'estatik.php' );

            if ( ! $valid ) {
                $this->_messenger->set_message(
                    __( 'Invalid array structure. The Archive should not consist plugin sub folder in archive.', 'es-plugin' ),
                    'error' );

                return false;
            }

            try {
                $z->extractTo( ES_PLUGIN_PATH );
                $this->_messenger->set_message( __( 'Estatik successfully upgraded!', 'es-plugin' ), 'success' );
                wp_redirect( admin_url( 'admin.php?page=es_pro&install=1' ) );
                exit;
            } catch (Exception $e) {
                $this->_messenger->set_message( $e->getMessage(), 'error' );
            }

            $z->close();
            unlink( $upload['file'] );

            return true;
        }

        return false;
    }

    /**
     * Upload plugin archive.
     *
     * @param $file
     * @return bool|array
     */
    protected function upload_file( $file )
    {
        if ( ! function_exists( 'wp_handle_upload' ) ) {
            require_once( ABSPATH . 'wp-admin/includes/file.php' );
        }

        $move = wp_handle_upload( $file, array( 'test_form' => false ) );

        if ( $move && ! isset( $move['error'] ) ) {
            return $move;
        } else {
            /**
             * Error generated by _wp_handle_upload()
             * @see _wp_handle_upload() in wp-admin/includes/file.php
             */
            $this->_messenger->set_message( $move['error'], 'error' );
        }

        return false;
    }
}
